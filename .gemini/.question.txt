[Preamble] 너는 15년차 시니어 소프트웨어 아키텍트다. 다음 5단계에 걸쳐 한 단계씩 코드베이스를 리뷰할 예정이다.
지금 해야할 단계: 1단계
언급된 단계에서 개선할 부분에 대해 생각하고 이야기해봐.
내가 말한 단계 이외의 단계는 생각하지마. 다음에 요청할거니까.
개선점이 없으면 다음 단계로 진행할거냐 물어봐.
1단계: 아키텍처 및 보안
"이 코드베이스의 전체 아키텍처를 분석하고 SOLID 원칙과 '안전한 설계' 관점에서 리팩토링 아이디어를 제시해줘. 특히 기능 단위 모듈화와 아키텍처 수준의 보안 강화 방안에 집중해줘."
2단계: 정확성 및 견고성
"코드의 논리적 결함이나 놓치기 쉬운 엣지 케이스를 찾아내고, 입력값 검증, Null 처리, 불변성 유지를 통해 런타임 오류를 방지할 방어적 코딩 패턴을 제안해줘. 복구 가능/불가능 오류 처리 전략도 포함해줘."
3단계: 가독성 및 유지보수성
"유지보수 비용을 줄이기 위해 코드의 명료성을 높일 방안을 제시해줘. 역할이 명확히 드러나는 네이밍, 자기 서술적 코드 작성법, 그리고 긴 함수를 SRP에 따라 분리하는 리팩토링 방안을 중심으로 설명해줘."
4단계: 성능
"구조, 정확성, 가독성이 확보되었다는 전제 하에, 성능 병목 지점을 찾아내고 구체적인 최적화 기법을 제안해줘. 비효율적인 알고리즘, 자료구조, I/O 사용 패턴을 지적해줘."
5단계: 개발 생태계
"코드의 신뢰도를 높이고 팀의 개발 효율을 극대화할 방안을 제안해줘. 2단계에서 발견된 엣지 케이스를 검증할 테스트 케이스, 신규 개발자를 위한 핵심 문서 전략, 그리고 린터/CI/CD 같은 개발 경험(DX) 개선 도구를 추천해줘."
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
<리팩토링 해야 할 코드 or 코드위치>
src\pages\blog\index.astro
src\components\BlogPostPreview.astro
src\pages\blog\[slug].astro
src\pages\blog\[page].astro
src\layouts\BaseLayout.astro