---
// src/pages/blog/[slug].astro
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  return allPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <article>
    <header class="post-header">
      <h1 class="title">{post.data.title}</h1>
      <time datetime={post.data.pubDate.toISOString()}>
        {
          post.data.pubDate.toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })
        }
      </time>
      {
        post.data.heroImage && (
          <img
            src={post.data.heroImage}
            alt=""
            width={720}
            height={360}
            class="hero-image"
          />
        )
      }
    </header>

    <div class="prose">
      <Content />
    </div>
  </article>
</BaseLayout>

<script src="../../scripts/code-copy.ts"></script>

<style>
  .post-header {
    margin-bottom: 2rem;
  }
  .hero-image {
    width: 100%;
    height: auto;
    border-radius: 16px;
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    object-fit: cover;
  }
  .title {
    font-size: 1.8em;
    line-height: 1.2;
    margin-bottom: 0.5rem;
  }
  time {
    color: var(--secondary-color);
  }
  .prose {
    max-width: 80ch;
    font-size: 1em;
    line-height: 1.8;
  }

  /* 코드 블록 전체의 폰트 크기 및 상하 패딩 설정 */
  .prose :global(pre.astro-code) {
    font-size: 0.75em;
    padding-top: 1.25rem;
    padding-bottom: 1.25rem;
    line-height: 1.6;
  }

  /* 코드 블록 내부의 code, line 배경색을 투명하게 만들어 
     pre 태그의 배경색만 보이도록 함 */
  .prose :global(pre.astro-code code),
  .prose :global(pre.astro-code .line) {
    background-color: transparent;
  }

  /* 각 라인에 좌우 패딩을 주어 정렬 */
  .prose :global(pre.astro-code .line) {
    padding-inline: 0.25rem;
  }

  .prose :global(.code-block-container) {
    position: relative;
  }

  .prose :global(.copy-button) {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    padding: 0.25rem 0.6rem;
    font-size: 0.8em;
    font-family: var(--font-family-sans);
    background-color: var(--element-hover-bg);
    color: var(--secondary-color);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    cursor: pointer;
    opacity: 0; /* 평소에는 숨김 */
    transition: opacity 0.2s ease-in-out;
  }

  /* 코드 블록에 마우스를 올렸을 때만 버튼 표시 */
  .prose :global(.code-block-container:hover .copy-button) {
    opacity: 1;
  }

  .prose :global(.copy-button:hover) {
    background-color: var(--accent-color);
    color: var(--header-background-color);
    border-color: var(--accent-color);
  }
</style>
