---
import { SITE } from "@src/consts";
import type { GetStaticPathsOptions } from "astro";
import { getSortedBlogPosts } from "../../utils/blog";
import BlogPostPreview from "../../components/BlogPostPreview.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allPosts = await getSortedBlogPosts();

  return paginate(allPosts, { pageSize: SITE.POSTS_PER_PAGE });
}

const { page } = Astro.props;

if (page.currentPage === 1) {
  return Astro.redirect("/blog");
}

const pageTitle = `Blog - Page ${page.currentPage}`;
---

<BaseLayout title={pageTitle}>
  <div class="mb-4 flex justify-center gap-4">
    {
      page.url.prev && (
        <a
          href={page.url.prev}
          class="no-underline text-primary font-display font-400 py-3 px-4 rounded-lg text-center 
                 transition-all ease-in-out duration-200 
                 dark:text-dark-primary 
                 hover:(text-accent bg-elementHoverBg) 
                 dark:hover:(text-dark-accent bg-dark-elementHoverBg)"
        >
          &laquo; Previous
        </a>
      )
    }
    <div
      class="no-underline text-secondary font-display font-400 py-3 px-4 rounded-lg text-center
             dark:text-dark-secondary"
    >
      Page {page.currentPage} / {page.lastPage}
    </div>
    {
      page.url.next && (
        <a
          href={page.url.next}
          class="no-underline text-primary font-display font-400 py-3 px-4 rounded-lg text-center 
                 transition-all ease-in-out duration-200 
                 dark:text-dark-primary 
                 hover:(text-accent bg-elementHoverBg) 
                 dark:hover:(text-dark-accent bg-dark-elementHoverBg)"
        >
          Next &raquo;
        </a>
      )
    }
  </div>

  <ul
    id="post-container"
    class={`list-none p-0 m-0 ${SITE.BLOG_GRID_CLASSES}`}
  >
    {
      page.data.map((post) => (
        <li>
          <BlogPostPreview post={post} />
        </li>
      ))
    }
  </ul>

  <div class="mb-4 mt-8 flex justify-center gap-4">
    {
      page.url.prev && (
        <a
          href={page.url.prev}
          class="no-underline text-primary font-display font-400 py-3 px-4 rounded-lg text-center 
                 transition-all ease-in-out duration-200 
                 dark:text-dark-primary 
                 hover:(text-accent bg-elementHoverBg) 
                 dark:hover:(text-dark-accent bg-dark-elementHoverBg)"
        >
          &laquo; Previous
        </a>
      )
    }
    <div
      class="no-underline text-secondary font-display font-400 py-3 px-4 rounded-lg text-center
             dark:text-dark-secondary"
    >
      Page {page.currentPage} / {page.lastPage}
    </div>
    {
      page.url.next && (
        <a
          href={page.url.next}
          class="no-underline text-primary font-display font-400 py-3 px-4 rounded-lg text-center 
                 transition-all ease-in-out duration-200 
                 dark:text-dark-primary 
                 hover:(text-accent bg-elementHoverBg) 
                 dark:hover:(text-dark-accent bg-dark-elementHoverBg)"
        >
          Next &raquo;
        </a>
      )
    }
  </div>
</BaseLayout>
