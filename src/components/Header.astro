---
// src/components/Header.astro
//
// @file Header 컴포넌트
// @description 모바일 및 데스크톱 환경에 따라 반응형으로 동작하는 웹사이트의
//              메인 내비게이션 헤더 컴포넌트입니다.
// @version 1.0.0

// 내비게이션 링크 데이터를 가져옵니다.
import { NAV_LINKS } from "@/consts";

/**
 * 현재 페이지 URL의 경로를 가져와 후행 슬래시('/')를 제거합니다.
 * 루트 경로('/')는 예외 처리하여 그대로 유지합니다.
 * @example '/about/' -> '/about', '/' -> '/'
 * @constant {string} currentPathWithoutTrailingSlash
 */
const currentPathWithoutTrailingSlash =
  Astro.url.pathname.endsWith("/") && Astro.url.pathname !== "/"
    ? Astro.url.pathname.slice(0, -1)
    : Astro.url.pathname;
---

<header
  class="sticky top-0 flex-shrink-0 w-full lg:w-[240px] h-auto lg:h-screen lg:p-8 border-b lg:border-r lg:border-b-0
         bg-headerBackground border-border
         dark:bg-dark-headerBackground dark:border-dark-border
         box-border flex flex-col transition-colors
         lg:justify-center
         [&.menu-open]:h-screen [&.menu-open]:justify-center [&.menu-open]:p-4"
>
  <button
    id="mobile-menu-toggle"
    aria-label="Toggle mobile menu"
    class="absolute top-2 right-2 z-20 lg:hidden bg-none border-none p-1 cursor-pointer text-primary rounded-full
                 transition-colors ease-in-out duration-200
                 flex items-center justify-center
                 dark:text-dark-primary
                 hover:(text-accent bg-elementHoverBg)
                 dark:hover:(text-dark-accent bg-dark-elementHoverBg)"
  >
    <div class="i-tabler-menu-2 w-7 h-7"></div>
  </button>
  <nav id="mobile-menu" class="hidden flex-col gap-4 lg:flex">
    {
      NAV_LINKS.map((link) => {
        // 현재 페이지의 경로와 링크의 경로를 비교하여 활성 상태인지 확인합니다.
        // 루트 경로('/')는 정확히 일치할 때만 활성화하고,
        // 다른 경로는 접두사가 일치하면 활성화합니다.
        const isActive =
          link.path === "/"
            ? currentPathWithoutTrailingSlash === "/"
            : currentPathWithoutTrailingSlash.startsWith(link.path);

        const commonClasses =
          "no-underline font-display font-400 py-3 px-4 rounded-lg text-center w-full";
        const activeClasses =
          "text-accent bg-elementHoverBg dark:text-dark-accent dark:bg-dark-elementHoverBg";
        const inactiveClasses =
          "text-primary dark:text-dark-primary transition-all ease-in-out duration-200 hover:(text-accent bg-elementHoverBg) dark:hover:(text-dark-accent bg-dark-elementHoverBg)";

        // 활성 상태에 따라 <span> 태그(클릭 불가) 또는 <a> 태그(클릭 가능)를 렌더링합니다.
        // 왜(Why): 현재 페이지의 링크는 클릭할 필요가 없으므로 <span>으로 처리하여
        //         사용자 경험을 개선하고 불필요한 링크 클릭을 방지합니다.
        return isActive ? (
          <span class:list={[commonClasses, activeClasses]}>{link.title}</span>
        ) : (
          <a href={link.path} class:list={[commonClasses, inactiveClasses]}>
            {link.title}
          </a>
        );
      })
    }
  </nav>

  <div
    id="utility-buttons"
    class="hidden flex flex-row items-center justify-center gap-4 mt-8 lg:flex lg:mt-auto"
  >
    <button
      id="theme-toggle"
      aria-label="Toggle theme"
      class="bg-none border-none p-1 cursor-pointer text-primary rounded-full
                   transition-colors ease-in-out duration-200
                   flex items-center justify-center
                   dark:text-dark-primary
                   hover:(text-accent bg-elementHoverBg)
                   dark:hover:(text-dark-accent bg-dark-elementHoverBg)"
    >
      <div class="i-tabler-sun-moon w-7 h-7"></div>
    </button>
    <button
      id="font-size-toggle"
      aria-label="Cycle font size"
      class="bg-none border-none p-1 cursor-pointer text-primary rounded-full
                   transition-colors ease-in-out duration-200
                   flex items-center justify-center
                   dark:text-dark-primary
                   hover:(text-accent bg-elementHoverBg)
                   dark:hover:(text-dark-accent bg-dark-elementHoverBg)"
    >
      <div class="i-tabler-typography w-7 h-7"></div>
    </button>
  </div>
</header>
